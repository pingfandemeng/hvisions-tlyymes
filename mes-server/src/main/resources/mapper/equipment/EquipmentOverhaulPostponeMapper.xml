<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hvisions.mes.equipment.dao.EquipmentOverhaulPostponeMapper" >
  <resultMap id="BaseResultMap" type="com.hvisions.mes.equipment.entity.EquipmentOverhaulPostpone" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="equipment_overhaul_id" property="equipmentOverhaulId" jdbcType="INTEGER" />
    <result column="postpone_date" property="postponeDate" jdbcType="DATE" />
    <result column="postpone_backup" property="postponeBackup" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from t_equipment_overhaul_postpone
    where id = #{id,jdbcType=INTEGER}
      and equipment_overhaul_id = #{equipmentOverhaulId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hvisions.mes.equipment.entity.EquipmentOverhaulPostpone" >
    insert into t_equipment_overhaul_postpone
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null">
        id,
      </if>
      <if test="equipmentOverhaulId != null">
        equipment_overhaul_id,
      </if>
      <if test="postponeDate != null">
        postpone_date,
      </if>
      <if test="postponeBackup != null">
        postpone_backup,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updaterId != null">
        updater_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="equipmentOverhaulId != null">
        #{equipmentOverhaulId,jdbcType=INTEGER},
      </if>
      <if test="postponeDate != null">
        #{postponeDate,jdbcType=DATE},
      </if>
      <if test="postponeBackup != null">
        #{postponeBackup,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hvisions.mes.equipment.entity.EquipmentOverhaulPostpone" >
    update t_equipment_overhaul_postpone
    <set>
      <if test="postponeDate != null">
        postpone_date = #{postponeDate,jdbcType=DATE},
      </if>
      <if test="postponeBackup != null">
        postpone_backup = #{postponeBackup,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where equipment_overhaul_id = #{equipmentOverhaulId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select id, equipment_overhaul_id, postpone_date, postpone_backup, creator_id, create_time, 
    updater_id, update_time, is_del
    from t_equipment_overhaul_postpone
    where id = #{id,jdbcType=INTEGER}
      and equipment_overhaul_id = #{equipmentOverhaulId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, equipment_overhaul_id, postpone_date, postpone_backup, creator_id, create_time, 
    updater_id, update_time, is_del
    from t_equipment_overhaul_postpone
  </select>
  <select id="findPostponeByEquipmentId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, equipment_overhaul_id, postpone_date, postpone_backup, creator_id, create_time,
    updater_id, update_time, is_del
    from t_equipment_overhaul_postpone
    <where>
      is_del = 0
      and equipment_overhaul_id = #{equipmentId}
    </where>
    order by update_time desc
    limit 1
  </select>
</mapper>